@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    ViewData["Title"] = Localizer["Title"];
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();

    ////Recuperation de la langue de l'utilisateur connecté
    //VariableGlobale.GetLanguage = requestCulture.RequestCulture.Culture.Name.ToString();

    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName.ToUpper() })
        .ToList();

    // nouvel ajout
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";

}

<div title="@Localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage"
          asp-area=""
          asp-controller="Culture"
          asp-action="SetLanguage"
          asp-route-returnUrl="@returnUrl"
          method="post"
          class="form-horizontal nav-link text-dark"
          role="form">
        <select name="culture" style="font-size:12px; color:blueviolet"
                onchange="this.form.submit();"
                asp-for="@requestCulture.RequestCulture.UICulture.Name"
                asp-items="cultureItems">
        </select>
    </form>
</div>